#!/usr/bin/env python

PACKAGE='camera_aravis'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

onoff_enum          = gen.enum([gen.const("Off",                    str_t, "Off",        "Off"),
                                gen.const("On",                     str_t, "On",         "On") ],
                                "On or Off")
auto_enum           = gen.enum([gen.const("Off_",                   str_t, "Off",        "Use Manual Settings"),
                                gen.const("Once",                   str_t, "Once",       "Recalc Once"),
                                gen.const("Continuous",             str_t, "Continuous", "Recalc Continually") ],
                                "Automatic Settings")
acquisitionmode_enum = gen.enum([gen.const("Continuous_",           str_t, "Continuous",  "Capture continuously upon trigger."),
                                gen.const("SingleFrame",            str_t, "SingleFrame", "Capture one frame upon trigger."),
                                gen.const("MultiFrame",             str_t, "MultiFrame",  "Capture multiple frames upon trigger.")],
                                "AcquisitionMode")
triggersource_enum  = gen.enum([gen.const("Software",               str_t, "Software",  "FrameStart triggered via software"),
                                gen.const("Line1",                  str_t, "Line1",     "FrameStart triggered via hardware input 1"),
                                gen.const("Line2",                  str_t, "Line2",     "FrameStart triggered via hardware input 2") ],
                                "TriggerSource")

gen.add("Acquire",              bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Acquire",              True)
gen.add("ExposureAuto",         str_t,    SensorLevels.RECONFIGURE_RUNNING, "Automatic exposure",   "Off", edit_method=auto_enum)
gen.add("GainAuto",             str_t,    SensorLevels.RECONFIGURE_RUNNING, "Automatic gain",       "Off", edit_method=auto_enum)
gen.add("ExposureTimeAbs",      double_t, SensorLevels.RECONFIGURE_RUNNING, "Exposure time (us)",   2000.0, 0, 1e6)
gen.add("Gain",                 double_t, SensorLevels.RECONFIGURE_RUNNING, "Gain (%)",             1.0, 0.0, 10000.0)
gen.add("AcquisitionMode",      str_t,    SensorLevels.RECONFIGURE_RUNNING, "Acquisition Mode",     "Continuous", edit_method=acquisitionmode_enum)
gen.add("AcquisitionFrameRate", double_t, SensorLevels.RECONFIGURE_RUNNING, "Framerate (fps)",      100.0, 0.0, 1000.0)

gen.add("TriggerMode",          str_t,    SensorLevels.RECONFIGURE_RUNNING, "TriggerMode",          "Off", edit_method=onoff_enum) # This is implemented to apply to the Frame trigger.
gen.add("TriggerSource",        str_t,    SensorLevels.RECONFIGURE_RUNNING, "Trigger Source",       "Line1", edit_method=triggersource_enum)
gen.add("softwaretriggerrate",  double_t, SensorLevels.RECONFIGURE_RUNNING, "Software Trigger Rate (hz)", 100.0, 0.01, 200.0)

gen.add("FocusPos",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "FocusPos",             32767, 0, 65535)
gen.add("frame_id",             str_t,    SensorLevels.RECONFIGURE_RUNNING, "ROS camera frame",     "camera")
gen.add("mtu",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "mtu",                  1500, 576, 9000)

exit(gen.generate(PACKAGE, "camera_aravis_params", "CameraAravis"))
